[{"content":"🌱 Intro 🧑🏻‍💻 40대에 개발자를 꿈꾸는 호주사는 비 전공자 아저씨.\n나를 한 문장으로 정의하자면 이렇다.\n대학에서는 생명과학을 전공하고 IT 업계에서 소프트웨어 테스팅 업무 7년간,\n호주로 이민을 오고나서는 컴퓨터와는 관계없는 일을 7년간 하고 개발 공부를 시작하게 되었다.\n개발을 하겠다고 생각한 후, 1년 반 과정의 Diploma of Advanced Computer Programing 코스(한국의 2년제 대학과정)를 시작하고 1년간 C#, Java, Python을 공부하였는데 맛보기로 조금씩만 배우는 느낌이어서 취업을 할 수 있을지가 고민이 되었고 그래서 부트캠프를 알아보던 중 야곰 아카데미를 알게 되었다.\n애플 제품은 이미 2011년부터 맥북 프로를 시작으로 아이폰, 아이패드, 아이맥, 애플워치, 애플TV를 사용하고 있었고 그동안의 사용자 경험이 충분히 만족스러웠기 때문에 iOS 개발을 선택하였다.\n호주의 iOS 점유율은 약 50% 정도 되는 것 같다.\n삼페보다는 Apple Pay가 짱! GOS되는 삼성은 버려!\n출처: https://gs.statcounter.com/os-market-share/mobile/australia 출처: https://www.kantarworldpanel.com/global/smartphone-os-market-share/ 일단 100% 온라인으로 진행되기 때문에 모든 과정에 참여가 가능했고, 개념을 익히는 것이기 때문에 언어의 장벽이 없는 것이 더 좋을 것이라 판단했다.\n기초 지식이 있는 사람을 대상으로 하는 [커리어 스타터 캠프]와는 달리 코드 스타터 캠프는 입금순으로 등록이 되기 때문에 지체없이 등록 ㄱㄱ\n가격은 5주 과정에 55만원이다. 먼저 수료한 사람들의 후기를 찾아보면서 가격이 잘 보이지 않아 한참 검색했던 기억이\u0026hellip;\n🌱 아카데미 과정 아카데미 과정은 주차별로 진행이 되고, 각각의 주차 월요일에 그 주차의 학습 컨텐츠, 미션이 공개된다. 한꺼번에 몰아서 할 수는 없다.\n시작 전 미리 학습페이지에 들어가서 Week 0에 있는 기본CS 지식과 git 사용법을 익혀두면 도움이 많이 된다.\n시간이 있는 사람은 야곰유튜브 - Swift 기초강의를 한번 쭉 듣고오면 좋을 것 같다. 💻 디스코드 채널 일주일에 한번 2시간씩 진행되는 줌 세션을 제외하면, 모든 소통은 디스코드에서 이루어진다.\n서버 내의 채널이 세분화 되어 있고, 각각의 채널을 선택하여 진행할 수 있다.\n함께 모여서 각자의 화면을 공유해놓고 공부하기도 하고, 음성채널에서 음악봇으로 음악을 틀어놓고 수다를 떨기도 한다. 같은 주제, 같은 자료를 가지고 함께 공부하다보니 동질감이 있어서 더 재미있었다.\n가끔은 학습 도우미분이 디스코드 채널에서 화면을 공유해주면서 캠퍼에게 모르는 것을 알려주기도 한다. 나도 같이 듣고 싶은데.. 부끄러워서 들어가보진 않았다.\n📖 학습자료 주차별 학습자료는 Swift 문법을 설명해주는 글과 중간에 STEP 1, 2, 3으로 불리는 미션이 있다.\n문법 강좌를 몇개 듣고 진행하면 그 주에 배운 문법을 사용하는 과제 STEP 1을 만나게 되고 XCode로 작성하여 PR을 보내면 담당 학습도우미가 리뷰를 하고 리뷰 내용을 반영하여 리팩토링하고 merge를 하게된다.\n리뷰를 기다리는 동안 미흡했던 내용을 찾아보거나 다음 학습자료 공부를 진행하는 식으로 진행된다.\n학습자료는 그냥 쭉 따라가며 따라치는 방법으로는 배울 수 없고 중간중간 간극이 존재한다.\n혼자 삽질도 해보고, 오류메세지를 구글에 검색하면서 얻는 지식도 많이 있다. 읽으면서 진행할 땐 알 것 같다가도 미션을 진행하다보면 아리까리 해서 학습자료를 앞뒤로 왔다리 갔다리.. 삽질을 하다보면 깨닫는 사실은 일부러 이렇게 만들었구나~ 하는 생각이었다.\n예를 들면 예제에서는 String 타입에 대해서만 나와있었는데 미션을 진행할 때에는 다른 타입으로 사용을 해야 하니 바로 가져다 쓸 수는 없고 고민에 고민을 거듭해서 사용을 해야 한다.\nif let만 배웠으니 사용했는데 guard let과 무엇이 다른지 어떤 것이 더 좋은지 질문이 나온다. 계속해서 고민하고 찾아보는 것이 좋다.\n이전 주차 마지막 STEP 까지 진행을 하지 않으면 다음 주차를 진행할 수가 없어서 캠퍼(캠프 참가자들을 캠퍼라고 부른다)들은 각각 다른 진도로 진행을 하게 된다. 상대적으로 직장이나 학업과 병행하는 분들이 시간을 많이 들일 수 없어서 뒤쳐지는 경우를 보았는데 적지않은 돈을 들여 배우는 만큼 캠프 등록 시 학습을 위한 어느정도의 시간을 확보해 놓는 것이 좋을 것 같다.\n캠프 기간이 종료되어도 디스코드 채널은 2주간, 학습 페이지는 6개월동안 접속이 가능하여 계속해서 공부할 수 있긴 하다. 나도 리뷰 작성이 완료되면 다시한번 배운 것들을 차근차근 정리해 놓으려고 한다.\n😀 학습도우미 개인적으로는 야곰아카데미에서 가장 좋은 부분이 담당 학습도우미이지 않을까 싶다.\n미션 진행시 담당도우미를 태그해서 PR을 보내면 도우미가 리뷰를 진행한다. 단순히 모르는 것을 질문하는 것이 아니라 code convention, Syntax, 빠지거나 추가할 부분\u0026hellip; 등을 알려주게 된다.\n\u0026ldquo;네이밍은 왜 이렇게 하셨나요?\u0026rdquo;\n\u0026ldquo;이 코드는 사용되지 않는 것 같네요~\u0026rdquo;\n\u0026ldquo;구조를 다시 생각해 보셨으면 좋겠어요~\u0026rdquo;\n\u0026ldquo;제가 생각한 것보다 더 좋아요~\u0026rdquo;\n\u0026ldquo;이렇게 바꿔보시면 좋을 것 같아요\u0026hellip;\u0026rdquo;\n등등, 코드를 다 작성하고 실행까지 완벽하게 되는구나 하고 PR을 보내도 항상 배울 것이 많음을 느끼는 좋은 시간이었다.\n담당 도우미별로 스타일이 다를 수 있기 때문에 시간 여유가 있는 사람은 다른 사람의 리뷰 내용도 확인해보면 더더더 많이 배울 수 있다. 나는 다른사람들이 쓴 TIL과 미션내용을 다 읽었다.\n살짝 아쉬웠던 부분은 3주차 후반부터 나의 담당도우미분이 많이 바빠보여서 수요일에 보낸 리뷰가 금요일까지 되지 않았던 적이 있었고 - PR알림을 놓친것 같다고 하셨다. - 그 후에도 계속 PR을 보내고 나서 하루 반정도 후에 리뷰가 되어 많이 아쉬웠다.\n야곰 아카데미에서는 주말을 제외하고 PR을 보내면 담당 도우미가 24시간 이내에 리뷰를 하고, 불가할 경우 알려준다고 했는데, 3주차 후반 부터는 거의 36시간 정도 걸려서 리뷰가 되어서 상대적으로 앞주차보다는 많이 못 배운것 같은 아쉬움이 남는다.\n🧑🏻‍💻 TIL(Today I Learned) 캠프에서는 그날 그날 배운 것들을 TIL로 정리해서 올리는 것을 장려하고 있다.\n매일 오후 5시에 TIL / 일일회고 티켓이 발행이 되고, 작성하면 캠프 페이지 메인에 github와 같이 파란색 잔디가 심겨진다.\n다른 캠퍼들이 고민하고 공부한 것들을 보면서 자극이 되기도 하고, 몰랐던 부분을 알게되어 좋았다.\n여기에 적어둔 것을 보고 일주일에 한번 있는 피드백 세션에서 좀 더 자세히 설명을 해 주기도 한다.\n개발 공부를 시작하면서 나도 1일 1잔디 심기를 하고 있는데, 조금 더 마크다운 사용법에 익숙해져야 겠다는 생각도 하게 되었고, 내가 고민했던 점을 잘 정리해 놓을 개발 블로그도 시작해야겠다는 동기부여가 되었다.\n📚 스터디 1주차가 시작되면서 스터디 결성을 위한 설문조사를 하고 참여 가능한 요일과 시간대를 제출하면 그에 따라 스터디를 묶어준다. 5기에서는 매주 수요일 오전반(9-1시), 오후반(1-5시), 저녁반(7-11시) 이렇게 분류해 주었던 것 같다.\n스터디라는 걸 학교다니면서도 해보지 않아서 어떻게 해야하는지 고민했는데 우리 그룹은 함께 디스코드 채널에 들어와서 자신이 공부하고 있는 화면 공유를 하고 각자 공부를 진행하였다.\n다른 그룹은 50분 공부하고 10분동안 자신이 공부한 것을 나누는 그룹도 있었던 것 같다.\n아무래도 30명에 달하는 캠퍼들을 다 알 수는 없어서 같은 스터디 그룹원과 친해지고 궁금한 것도 물어보고 하게 되는 것 같으니 스터디는 왠만하면 참여하는 것이 좋다고 생각한다.\n❓ 질문 잘 정리하기 학습을 진행하다가 모르는 것이 있으면 디스코드 #질문-답변 채널에 물어보면 많은 분들이 친절하게 알려주신다.\n질문을 할 때에는 어떤 점이 궁금한지, 어떤 것을 찾아보았는지, Swift 공식 문서는 어떻게 말하고 있는지.. 잘 정리해서 질문하면 더 빠른 이해가 가능하다.\n물론 물어본 것에 대해 바로바로 답변을 해주지는 않는다. \u0026quot; ㅇㅇ는 어떻게 생각하시나요? \u0026ldquo;, \u0026quot; 에러 메세지는 무슨 뜻인가요? \u0026quot; 등 약간 선문답같다는 생각이 들 때도 있다.\n많은 사람이 함께 들어와 있는 대화방이다 보니, 그렇게 질문이 끝나버리기도 하는데, 이해가 잘 안되면 그냥 넘어가지 말고 질문을 정리해서 다시 물어보거나 조금 더 찾아보는 것을 추천한다.\n우리는 초보들이고 모르는 것이 당연하다. 그래도 잘 모르겠다면 담당 도우미에게라도 물어보자!\n🌱 Outro 올해 진행되고 있는 애플 아카데미 최고령자가 42세 라는 이야기를 iOS 개발자 단톡방에서 보았다.\n여기 호주는 나이를 물어보지 않고 50대에 치킨집 창업 🍗 을 고민하지 않아도 되어, 한국보다는 상황이 조금 낫지 않을까 하는 생각이 들지만, 여전히 인터넷에서는 비전공자, 30대 라는 키워드로 개발공부를 시작해도 되는지 질문이 많이 올라오는 것 같다. (우리 모두 힘내요~ 💪)\n지금 나는 야곰 아카데미의 커리어 스타터 캠프 7기 사전과제를 마치고 기다리는 중이다. 꼭 합격해야 할텐데..\niOS 개발자를 위한 첫걸음인 코드 스타터 캠프, 그리고 심화과정(?)인 커리어 스타커 캠프를 잘 마무리하고 나만의 앱을 만드는 그날까지, 계속해서 공부하고 질문하는 개발자가 될 수있도록 하는 밑거름을 만드는 시간이었다 생각한다.\n앞으로 주변에 iOS 개발을 하고 싶다고 물어보는 사람이 있다면, 망설이지 않고 코드 스타터 캠프를 추천해 줄 수 있을 것 같다.\n‼️ 5기를 함께했던 캠퍼 중에 언제 iOS 개발을 배우는지 물어보는 사람이 있었던 것 같았는데, 코드 스타터 캠프에서는 Swift 문법 만을 배우고 iOS는 쳐다도 보지 않는다.\n당장 iOS 화면을 만들고 구동하고 싶은 사람은 코드 스타터 캠프가 맞지 않을 수 있으니 다시 한번 생각해보길..\n","date":"2022-07-27T10:46:27+08:00","image":"https://JaeKimdev.github.io/post/review/220727-2.png","permalink":"https://JaeKimdev.github.io/p/%EC%8A%A4%EC%9C%84%ED%94%84%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%8A%A4%ED%83%80%ED%84%B0-%EC%BA%A0%ED%94%84-5%EA%B8%B0-%ED%9B%84%EA%B8%B0/","title":"스위프트 코드 스타터 캠프 5기 후기"},{"content":"새로운 글 작성하기 신규 포스트는 터미널에 다음과 같이 입력하면 된다.\n파일명 정하기가 어려울 것 같아 날짜로 입력하기로 했다.\n1 2 3 # hugo new post/\u0026lt;폴더명\u0026gt;/파일 이름.md (폴더명 생략가능) $ hugo new post/tech/220727-1.md Content \u0026#34;/Users/smfc/Dev/blog/content/post/tech/220727-1.md\u0026#34; created blog/content/post 하단에 md 파일이 생성되고 그것을 수정해서 저장하면 된다.\n터미널에서 로컬서버를 실행하면 바로 확인이 가능하다\n1 2 3 # 로컬 서버 실행 $ hugo server -D # http://localhost:1313 접속하여 확인 작성을 다 마치고 로컬서버에서 확인 후 배포를 하면 된다.\n1 2 3 4 5 # 로컬서버 종료 ctrl + c $ git add . $ git push $ ./deploy.sh 포스트에 댓글 추가하기 참고한 gurumee92님이 하신대로 깃허브에서 blog-comments라는 이름으로 레포지토리를 하나 더 만들고 여기 utterances 사이트로 가서 \u0026lsquo;Blog Post ↔️ Issue Mapping`에서 한가지를 선택 후 바로 위쪽 repo 칸에 자신의 레포지토리 이름(JaeKimDev/blog-comments)을 넣어주고 아래쪽에 보여지는 스크립트를 복사하면 된다.\n1 2 3 4 5 6 7 \u0026lt;script src=\u0026#34;https://utteranc.es/client.js\u0026#34; repo=\u0026#34;JaeKimDev/blog-comments\u0026#34; issue-term=\u0026#34;title\u0026#34; theme=\u0026#34;github-light\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; 복사한 스크립트를 blog/themes/hugo-tranquilpeak-theme/layouts/partials/post/comment.html 파일을 열어 하단에 붙여넣어 주고 확인해보면 댓글 추가 폼이 생성되었다.\n포스트에 이미지 추가하기 어떻게 보면 간단할 수 있는데, md 파일을 수정하면서 어떻게 이미지를 넣어야 할 지 몰라서 고생했다.\nstatic 폴더 안에 image 폴더를 만들고(blog/static/image) 로컬에서 불러오는 방법\n온라인에 올리고 링크를 이용하여 불러오는 방법\n1번 방법은 blog/static/image 안에 이미지.png 파일을 추가하고 글 작성 시 ![img](/image/이미지.png) 라고 적어주면 이미지가 추가된다.\n‼️ 추가 : 경로를 \u0026ldquo;post/review/220727-2.png\u0026rdquo; 로 적어주어도 된다. 2번 방법은 온라인에 올리고 링크를 이용하여 불러오는 방법이다.\n나는 깃허브 TIL폴더 하단에 etc/images/blog폴더를 만들어서 이미지를 업로드 하고\n![img](이미지 경로) 라고 적어주었다.\n여러번 쓸 수 있을 것 같은 짤방이나 이미지는 한번만 올려두고 링크로 끌고 오는 편이 좋을 것 같다.\n만들어진 서비스를 이용하는 것이 더 편리하고 좋겠지만, git과도 좀 더 친해질 수 있고 마크다운 언어도 익숙해질 수 있을 것 같아 일단은 써보려고 한다.\nReference Github 페이지 블로그 만들기 (with Hugo) 블로그 구축기 (1) Hugo + Github으로 개인 블로그 만들기 ","date":"2022-07-27T09:23:57+08:00","image":"https://raw.githubusercontent.com/JaeKimdev/TIL/main/etc/images/blog/blog-1.avif","permalink":"https://JaeKimdev.github.io/p/hugo%EB%A1%9C-github.io-%EA%B8%B0%EC%88%A0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B02/","title":"Hugo로 github.io 기술 블로그 만들기(2)"},{"content":"개발 공부를 시작하면서부터 기술블로그를 쓰면 좋다는 이야기를 들었지만, 어디서부터 어떻게 해야 할지 몰라서 github.io 페이지를 만들고 Jekyll을 이용해서 블로그를 만들어 놓기만 한 채 방치하고 있었다.\niOS 공부를 시작하면서 공부한 것 정리용으로, 또 나중에 찾아볼 수 있도록 기록하면 좋겠다 싶어서 찾아보니 Jekyll은 컨텐츠가 쌓일수록 빌드 속도가 엄청 늦어진다는 글을 읽어서 새롭게 hugo를 사용해 보기로 했다.\n마침 야곰 아카데미 코드 스타터 5주 과정이 끝나서 리뷰를 써야겠다고 마음먹고 시작!\nHugo 설치 HomeBrew가 설치되어 있어야 한다. 여기 화면 중앙의 Install Homebrew하단의 코드를 복사해서 터미널에서 실행 1 2 3 4 5 6 7 8 # hugo 설치 $ brew install hugo # hugo 버전 확인 $ hugo version # 설치가 되어 있다면 버전이 출력된다. hugo v0.101.0+extended darwin/amd64 BuildDate=unknown Github 레포지토리 생성 blog 라는 이름의 레포지토리와 \u0026lt;username\u0026gt;.github.io 자기아이디 이름의 github.io 레포지토리를 생성해 준다\nHugo 프로젝트 만들기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # hugo 프로젝트 생성 $ hugo new site blog # 생성 완료되면 출력 문구 Congratulations! Your new Hugo site is created in /Users/user/Workspaces/blog. Just a few more steps and you\u0026#39;re ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026#34;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026#34; command. 2. Perhaps you want to add some content. You can add single files with \u0026#34;hugo new \u0026lt;SECTIONNAME\u0026gt;/\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026#34;. 3. Start the built-in live server via \u0026#34;hugo server\u0026#34;. Visit https://gohugo.io/ for quickstart guide and full documentation. 테마는 여기 에서 확인하고 고를 수 있는데, 나는 gurumee92님이 설치한 hugo-tranquilpeak-theme을 따라서 설치하였다. 뭣도 모르니까\u0026hellip;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # blog 폴더로 이동 $ cd blog # 프로젝트 루트 경로 확인 $ pwd /Users/smfc/Dev/blog # git 초기화 $ git init # 브렌치를 main으로 변경 $ git branch -M main # git submodule add https://github.com/\u0026lt;theme 경로\u0026gt;.git themes/\u0026lt;theme 이름\u0026gt; $ git submodule add https://github.com/kakawait/hugo-tranquilpeak-theme.git themes/hugo-tranquilpeak-theme # 테마 폴더 안의 `config.toml` 파일을 blog 폴더 하단으로 복사 $ cp themes/hugo-tranquilpeak-theme/exampleSite/config.toml config.toml 그후 blog 폴더 하단의 config.toml 파일을 열어서 수정해준다.\n1 2 3 4 5 # 이 부분 baseURL을 자신의 github.io 주소로 수정 baseURL = \u0026#34;https://jaekimdev.github.io/\u0026#34; # 블로그 상단에 노출되는 이름 수정 title = \u0026#34;Jae\u0026#39;s Devlog\u0026#34; 저장 후 터미널에서 hugo 서버 실행\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 $ hugo server Start building sites … hugo v0.101.0+extended darwin/amd64 BuildDate=unknown | EN-US -------------------+-------- Pages | 9 Paginator pages | 0 Non-page files | 0 Static files | 4 Processed images | 0 Aliases | 1 Sitemaps | 1 Cleaned | 0 Built in 9 ms Watching for changes in /Users/smfc/Dev/blog/{archetypes,content,data,layouts,static,themes} Watching for config changes in /Users/smfc/Dev/blog/config.toml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop 브라우저를 열어서 http://localhost:1313/로 접속하면 블로그 화면을 볼 수 있다.\ngithub 레포지토리 연결 blog에 blog 레포지토리를, blog/public에 \u0026lt;username\u0026gt;.github.io 레포지토리를 연결한다.\n1 2 3 4 5 6 7 # blog -\u0026gt; blog 레포지토리 연결 # git remote add origin http://github.com/\u0026lt;username\u0026gt;/blog.git $ git remote add origin https://github.com/jaekimdev/blog.git # blog/public -\u0026gt; \u0026lt;username\u0026gt;.github.io 연결 # git submodule add -b main http://github.com/\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io.git public $ git submodule add -b main http://github.com/jaekimdev/jaekimdev.github.io.git public ‼️ public이 이미 존재한다는 에러 메세지가 보여지고 진행되지 않음. ➡️ blog 폴더 하단의 public 폴더를 지운 후에 명령어 실행\n배포를 쉽게 하기 위해 blog 폴더 하단에 \u0026lsquo;deploy.sh\u0026rsquo; 파일을 만들어 준다 - 나는 config.toml 파일을 복사한 후 이름을 변경해 주고 아래 내용을 붙여넣기 한 후 저장하였다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #!/bin/bash echo -e \u0026#34;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026#34; # Build the project. # hugo -t \u0026lt;여러분의 테마\u0026gt; hugo -t hugo-tranquilpeak-theme # Go To Public folder, sub module commit cd public # Add changes to git. git add . # Commit changes. msg=\u0026#34;rebuilding site `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; # Push source and build repos. git push origin main # Come Back up to the Project Root cd .. # blog 저장소 Commit \u0026amp; Push git add . msg=\u0026#34;rebuilding site `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; git push origin main 터미널에서 sh파일에 권한을 주고 실행한다.\n1 2 3 4 5 # deploy.sh 실행 파일 권한 부여 $ chmod 777 deploy.sh # 배포 실행 $ ./deploy.sh ‼️ 나는 이 부분에서 오류 발생! ➡️ 오류메세지에서 안내해 주는대로 git fetch 먼저 해주고 ./deploy.sh 재실행 ‼️ 또다시 오류 발생! ➡️ 오류메세지에서 안내해 주는대로 git pull 실행하고 git branch --set-upstream-to=origin/main실행한 후 ./deploy.sh 재실행 ‼️ 또다시 오류 발생! ➡️ 오류메세지에서 안내해 주는대로 git pull 실행하고 ./deploy.sh 재실행 내가 찾아본 블로그들에서는 이 부분을 알려주는 곳이 없어서 엄청 오랫동안 만들고 지우고를 반복;;\n이젠 다 해결되어 https://\u0026lt;username\u0026gt;.github.io로 접속해서 블로그를 볼 수 있다!!! 🎉\nReference Github 페이지 블로그 만들기 (with Hugo) 블로그 구축기 (1) Hugo + Github으로 개인 블로그 만들기 Hugo로 Github.io 블로그 만들기 ","date":"2022-07-26T15:22:52+08:00","permalink":"https://JaeKimdev.github.io/p/hugo%EB%A1%9C-github.io-%EA%B8%B0%EC%88%A0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B01/","title":"Hugo로 github.io 기술 블로그 만들기(1)"},{"content":"My First Tech blog post!! 🎉\n☀️\n","date":"2022-07-26T11:06:26+08:00","permalink":"https://JaeKimdev.github.io/p/hugo-blog-%ED%85%8C%EC%8A%A4%ED%8A%B8/","title":"Hugo Blog 테스트"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://JaeKimdev.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://JaeKimdev.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode bilibilibi Shortcode Gist Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2019-03-10T00:00:00Z","permalink":"https://JaeKimdev.github.io/p/rich-content/","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://JaeKimdev.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://JaeKimdev.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://JaeKimdev.github.io/p/emoji-support/","title":"Emoji Support"}]